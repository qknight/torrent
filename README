issues:
========================================================================
fires updateProgress with 0 before state change
========================================================================
void TorrentFrontend::updateProgress(int) 98 %  "Preparing" 
void TorrentFrontend::updateProgress(int) 99 %  "Preparing" 
void TorrentFrontend::updateProgress(int) 100 %  "Preparing" 
void TorrentFrontend::updateProgress(int) 0 %  "Preparing" 
void TorrentFrontend::updateState(TorrentClient::State) "Searching" 
void TorrentFrontend::updateState(TorrentClient::Stat

========================================================================
download widget uses wrong torrent when changing torrents
========================================================================
1. start torrent
2. file - add new torrent
3. select /tmp/evopedia/wikipedia_de_2010-07-27.torrent
4. in the browser one can see now the contents of that torrent, now
5. hit the torrent 'browse' button and select a different
6. /tmp/evopedia/wikipedia_sl_2010-08-12.torrent, notice that the browser shows now the wikipedia_sl_2010-08-12 contents
7. hit ok and see that /tmp/evopedia/wikipedia_de_2010-07-27.torrent is downloaded AND NOT /tmp/evopedia/wikipedia_sl_2010-08-12.torrent

========================================================================
compiling with QT_NO_CAST_TO_ASCII not possible
========================================================================
DEFINES += QT_NO_CAST_TO_ASCII

g++ -c -pipe -march=native -O2 -Wall -W -D_REENTRANT -DQT_NO_CAST_FROM_BYTEARRAY -DQT_NO_CAST_TO_ASCII -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I. -o trackerclient.o trackerclient.cpp
trackerclient.cpp: In member function 'void TrackerClient::fetchPeerList()':
trackerclient.cpp:122: error: no match for 'operator+=' in 'query += passkey'
/usr/include/qt4/QtCore/qbytearray.h:486: note: candidates are: QByteArray& QByteArray::operator+=(char)
/usr/include/qt4/QtCore/qbytearray.h:488: note:                 QByteArray& QByteArray::operator+=(const char*)
/usr/include/qt4/QtCore/qbytearray.h:490: note:                 QByteArray& QByteArray::operator+=(const QByteArray&)
trackerclient.cpp:123: error: no match for 'operator+=' in 'query += operator+(const char*, const QString&)(((const QString&)((const QString*)(& encodedSum))))'
/usr/include/qt4/QtCore/qbytearray.h:486: note: candidates are: QByteArray& QByteArray::operator+=(char)
/usr/include/qt4/QtCore/qbytearray.h:488: note:                 QByteArray& QByteArray::operator+=(const char*)
/usr/include/qt4/QtCore/qbytearray.h:490: note:                 QByteArray& QByteArray::operator+=(const QByteArray&)
make: *** [trackerclient.o] Error 1

i fixed this with 
    query += "info_hash=" + encodedSum.toLatin1();
not sure if that is correct

========================================================================
compiling with QT_NO_CAST_FROM_BYTEARRAY not possible
========================================================================
DEFINES += QT_NO_CAST_FROM_BYTEARRAY

============= metainfo.cpp ============
/usr/include/qt4/QtCore/qbytearray.h: In member function 'bool MetaInfo::parse(const QByteArray&)':
/usr/include/qt4/QtCore/qbytearray.h:364: error: 'QByteArray::operator QNoImplicitBoolCast() const' is private
metainfo.cpp:106: error: within this context
metainfo.cpp:106: error: invalid conversion from 'QNoImplicitBoolCast' to 'const char*'
metainfo.cpp:106: error:   initializing argument 1 of 'static QString QString::fromUtf8(const char*, int)'
/usr/include/qt4/QtCore/qbytearray.h:364: error: 'QByteArray::operator QNoImplicitBoolCast() const' is private
metainfo.cpp:111: error: within this context
metainfo.cpp:111: error: invalid conversion from 'QNoImplicitBoolCast' to 'const char*'
metainfo.cpp:111: error:   initializing argument 1 of 'static QString QString::fromUtf8(const char*, int)'
/usr/include/qt4/QtCore/qbytearray.h:364: error: 'QByteArray::operator QNoImplicitBoolCast() const' is private
metainfo.cpp:120: error: within this context
metainfo.cpp:120: error: invalid conversion from 'QNoImplicitBoolCast' to 'const char*'
metainfo.cpp:120: error:   initializing argument 1 of 'static QString QString::fromUtf8(const char*, int)'
/usr/include/qt4/QtCore/qbytearray.h:364: error: 'QByteArray::operator QNoImplicitBoolCast() const' is private
metainfo.cpp:128: error: within this context
metainfo.cpp:128: error: invalid conversion from 'QNoImplicitBoolCast' to 'const char*'
metainfo.cpp:128: error:   initializing argument 1 of 'static QString QString::fromUtf8(const char*, int)'
/usr/include/qt4/QtCore/qbytearray.h:364: error: 'QByteArray::operator QNoImplicitBoolCast() const' is private
metainfo.cpp:137: error: within this context
metainfo.cpp:137: error: invalid conversion from 'QNoImplicitBoolCast' to 'const char*'
metainfo.cpp:137: error:   initializing argument 1 of 'static QString QString::fromUtf8(const char*, int)'
/usr/include/qt4/QtCore/qbytearray.h:364: error: 'QByteArray::operator QNoImplicitBoolCast() const' is private
metainfo.cpp:139: error: within this context
metainfo.cpp:139: error: invalid conversion from 'QNoImplicitBoolCast' to 'const char*'
metainfo.cpp:139: error:   initializing argument 1 of 'static QString QString::fromUtf8(const char*, int)'

============= trackerclient.cpp ============
/usr/include/qt4/QtCore/qbytearray.h: In member function 'void TrackerClient::httpRequestDone(bool)':
/usr/include/qt4/QtCore/qbytearray.h:364: error: 'QByteArray::operator QNoImplicitBoolCast() const' is private
trackerclient.cpp:185: error: within this context
trackerclient.cpp:185: error: invalid conversion from 'QNoImplicitBoolCast' to 'const char*'
trackerclient.cpp:185: error:   initializing argument 1 of 'static QString QString::fromUtf8(const char*, int)'
/usr/include/qt4/QtCore/qbytearray.h:364: error: 'QByteArray::operator QNoImplicitBoolCast() const' is private
trackerclient.cpp:191: error: within this context
trackerclient.cpp:191: error: invalid conversion from 'QNoImplicitBoolCast' to 'const char*'
trackerclient.cpp:191: error:   initializing argument 1 of 'static QString QString::fromUtf8(const char*, int)'
/usr/include/qt4/QtCore/qbytearray.h:364: error: 'QByteArray::operator QNoImplicitBoolCast() const' is private
trackerclient.cpp:215: error: within this context
trackerclient.cpp:215: error: invalid conversion from 'QNoImplicitBoolCast' to 'const char*'
trackerclient.cpp:215: error:   initializing argument 1 of 'static QString QString::fromUtf8(const char*, int)'
/usr/include/qt4/QtCore/qbytearray.h:364: error: 'QByteArray::operator QNoImplicitBoolCast() const' is private
trackerclient.cpp:216: error: within this context
trackerclient.cpp:216: error: invalid conversion from 'QNoImplicitBoolCast' to 'const char*'
trackerclient.cpp:216: error:   initializing argument 1 of 'static QString QString::fromUtf8(const char*, int)'
make: *** [trackerclient.o] Error 1

== fix ==
fixing is easy, as it requires a constData() explicit cast
 
== the torrent client status after this fix ==
i was able to download with 16kb/s, so it seem to work

========================================================================
good default rates for upload/download kb/s
========================================================================
starting a TorrentClient without setting a download and uploadrate will result in:
 - no uploads or downloads are started
 - no seeds are found
 - no debugmessage of any kind
there needs to be a better default


========================================================================
library usage scenario
========================================================================
using the torrent for your own code is not complicated as the new coreapplication shows. in contrast:
the gui example is very good but lacks a easy copy'n'paste factor as one must read a lot of stuff before it can be used for other projects

see:
torrent-guiless.pro
main-nogui.cpp
coreapplication.cpp
coreapplication.h

which has a console frontend only. handy for integration into your project - very easy to adapt

build with:
make distclean
qmake torrent-guiless
make
./torrent-guiless
